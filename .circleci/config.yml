version: 2.1
orbs:
  slack: circleci/slack@3.4.2

executors:
  docker-executor:
    docker:
      - image: 218546966473.dkr.ecr.us-east-1.amazonaws.com/circle-ci:stitch-tap-tester-uv

jobs:
  build:
    executor: docker-executor
    steps:
      - run: echo 'CI done'
  ensure_env:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: 'Setup virtual env'
          command: |
            uv venv --python 3.11 /usr/local/share/virtualenvs/tap-google-ads
            source /usr/local/share/virtualenvs/tap-google-ads/bin/activate
            uv pip install 'pip==23.3.2'
            uv pip install 'setuptools==56.0.0'
            uv pip install .[dev]
            uv pip install awscli --upgrade
      - slack/notify-on-failure:
          only_for_branches: main
      - persist_to_workspace:
          root: /
          paths:
            - root/.local/share/uv/python/cpython-3.11.13-linux-x86_64-gnu/bin
            - root/.local/share/uv/python/cpython-3.11.13-linux-x86_64-gnu/lib
            - usr/local/share/virtualenvs/tap-google-ads

  run_pylint:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: /
      - run:
          name: 'Run pylint'
          command: |
            source /usr/local/share/virtualenvs/tap-google-ads/bin/activate
            aws s3 cp s3://com-stitchdata-dev-deployment-assets/environments/tap-tester/tap_tester_sandbox dev_env.sh
            source dev_env.sh
            echo "$PYLINT_DISABLE_LIST"
            uv pip install pylint
            pylint tap_google_ads --disable "$PYLINT_DISABLE_LIST,too-many-positional-arguments"
      - slack/notify-on-failure:
          only_for_branches: main

  run_unit_tests:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: /
      - run:
          name: 'Run Unit Tests'
          command: |
            source /usr/local/share/virtualenvs/tap-google-ads/bin/activate
            uv pip install pytest coverage
            coverage run -m pytest tests/unittests
            coverage html
      - store_test_results:
          path: test_output/report.xml
      - store_artifacts:
          path: htmlcov
      - slack/notify-on-failure:
          only_for_branches: main

  run_integration_tests:
    executor: docker-executor
    parallelism: 19
    steps:
      - checkout
      - attach_workspace:
          at: /
      - run:
          name: 'Run Integration Tests'
          no_output_timeout: 30m
          command: |
            source /usr/local/share/virtualenvs/tap-google-ads/bin/activate
            aws s3 cp s3://com-stitchdata-dev-deployment-assets/environments/tap-tester/tap_tester_sandbox dev_env.sh
            source dev_env.sh
            mkdir /tmp/${CIRCLE_PROJECT_REPONAME}
            export STITCH_CONFIG_DIR=/tmp/${CIRCLE_PROJECT_REPONAME}
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            circleci tests glob "tests/*.py" | circleci tests split > ./tests-to-run
            if [ -s ./tests-to-run ]; then
              for test_file in $(cat ./tests-to-run)
              do
                run-test --tap=${CIRCLE_PROJECT_REPONAME} $test_file
              done
            fi
      - slack/notify-on-failure:
          only_for_branches: main
      - store_artifacts:
          path: /tmp/tap-google-ads

workflows:
  version: 2
  commit: &commit_jobs
    jobs:
      - ensure_env:
          context:
            - circleci-user
            - tier-1-tap-user
      - run_pylint:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - run_unit_tests:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      # - run_integration_tests:
      #     context:
      #       - circleci-user
      #       - tier-1-tap-user
      #     requires:
      #       - ensure_env
      - build:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - run_pylint
            - run_unit_tests
            # - run_integration_tests
  build_daily:
    <<: *commit_jobs
    triggers:
      - schedule:
          cron: "0 3 * * *"
          filters:
            branches:
              only:
                - main
